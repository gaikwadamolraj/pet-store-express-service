{"version":3,"sources":["../../server/controller/owner.js"],"names":["Owners","req","res","errors","isEmpty","status","json","array","body","owner","success","message","owners"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;IAEMA,M;;;;;;;;;;;;oDACqBC,G,EAAKC,G;;;;;;;AAEtBC,gBAAAA,M,GAAS,wCAAiBF,GAAjB,C;;AACf,oBAAI,CAACE,MAAM,CAACC,OAAP,EAAL,EAAuB;AACrBF,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEH,oBAAAA,MAAM,EAAEA,MAAM,CAACI,KAAP;AAAV,mBAArB;AACD;;;uBAEiB,mBAAON,GAAG,CAACO,IAAX,C;;;AAAdC,gBAAAA,K;;AACF,oBAAGA,KAAH,EAAU;AACRP,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,oBAAAA,OAAO,EAAE,IAAX;AAAiBC,oBAAAA,OAAO,EAAE,4BAA1B;AAAwDF,oBAAAA,KAAK,EAALA;AAAxD,mBAArB;AACD,iBAFD,MAEO;AACLP,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,oBAAAA,OAAO,EAAE;AAAX,mBAArB;AACD;;;;;;;;AAEDT,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEK,kBAAAA,OAAO,EAAE;AAAX,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAKmBV,G,EAAKC,G;;;;;;;;uBAEL,uB;;;AAAfU,gBAAAA,M;AACJV,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,MAArB;;;;;;;AAEAV,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,2BAAS;AAAX,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAIkBL,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,GAAG,CAACQ,KAAzB;;;;;;;;;;;;;;;;;;;;;qDAGqBR,G,EAAKC,G;;;;;;;uBACV,4BAAgBD,GAAG,CAACQ,KAApB,EAA2BR,GAAG,CAACO,IAA/B,C;;;AAAdC,gBAAAA,K;;AACJ,oBAAGA,KAAH,EAAS;AACLP,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,oBAAAA,OAAO,EAAE,IAAX;AAAiBC,oBAAAA,OAAO,EAAE,2BAA1B;AAAuDF,oBAAAA,KAAK,EAALA;AAAvD,mBAArB;AACD,iBAFH,MAES;AACLP,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,6BAAS;AAAX,mBAArB;AACD;;;;;;;;;;;;;;;;;;;;;qDAGoBL,G,EAAKC,G;;;;;;;uBACV,4BAAgBD,GAAG,CAACQ,KAApB,C;;;AAAdA,gBAAAA,K;;AACJ,oBAAIA,KAAJ,EAAW;AACTP,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,oBAAAA,OAAO,EAAE,IAAX;AAAiBC,oBAAAA,OAAO,EAAE,2BAA1B;AAAuDF,oBAAAA,KAAK,EAALA;AAAvD,mBAArB;AACD,iBAFD,MAEO;AACLP,kBAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,6BAAS;AAAX,mBAArB;AACD;;;;;;;;;;;;;;;;;;;;eAKUN,M","sourcesContent":["import { create, getOwnerById, getOwners, updateOwnerById, deleteOwnerById } from '../models/owner';\nimport { validationResult } from 'express-validator';\n\nclass Owners {\n  static async createOwner(req, res) {\n    try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      res.status(422).json({ errors: errors.array() });\n    }\n\n    let owner = await create(req.body)\n      if(owner) {\n        res.status(201).json({ success: true, message: 'Owner successfully created', owner });\n      } else {\n        res.status(500).json({ message: \"Failed to create owner\" });\n      }\n    } catch(err) {\n      res.status(500).json({ message: \"Failed to create owner\" });\n    }\n      \n  }\n\n  static async getOwners(req, res) {\n    try {\n      let owners = await getOwners();\n      res.status(200).json(owners);\n    } catch (err) {\n      res.status(500).json({ \"error\": 'Failed to get owners' })\n    }\n  }\n\n  static async getOwner(req, res) {\n      res.status(200).json(req.owner);\n   }\n\n  static async updateOwner(req, res) {\n    let owner = await updateOwnerById(req.owner, req.body);\n    if(owner){\n        res.status(200).json({ success: true, message: 'Owner updated sucessfully', owner });\n      } else {\n        res.status(500).json({ \"error\": \"Failed to update\" })\n      }\n  }\n\n  static async deleteOwner(req, res) {\n    let owner = await deleteOwnerById(req.owner);\n    if (owner) {\n      res.status(200).json({ success: true, message: 'Owner deleted sucessfully', owner });\n    } else {\n      res.status(500).json({ \"error\": 'Failed to delete owner' })\n    }\n  }\n\n}\n\nexport default Owners;"],"file":"owner.js"}