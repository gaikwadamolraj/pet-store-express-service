{"version":3,"sources":["../../server/helpers/middlewares.js"],"names":["validateOwner","req","res","next","params","ownerId","owner","petId","id","pet","status","json","message","validate","method","exists","withMessage","trim","isLength","min","isEmail","isInt","max","isIn","module","exports"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAIA,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,yBAAaF,GAAG,CAACG,MAAJ,CAAWC,OAAxB,CADF;;AAAA;AACZC,YAAAA,KADY;;AAAA,iBAGbL,GAAG,CAACG,MAAJ,CAAWG,KAHE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIF,+BAAqBN,GAAG,CAACG,MAAJ,CAAWG,KAAhC,EAAuCD,KAAK,CAACE,EAA7C,CAJE;;AAAA;AAIdC,YAAAA,GAJc;;AAAA;AAOhB,gBAAGH,KAAH,EAAU;AACNL,cAAAA,GAAG,CAACK,KAAJ,GAAYA,KAAZ;AACA,kBAAGG,GAAH,EAAQR,GAAG,CAACQ,GAAJ,GAAUA,GAAV;AACRN,cAAAA,IAAI;AACP,aAJD,MAIO;AACHD,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAArB;AACH;;AAbe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbZ,aAAa;AAAA;AAAA;AAAA,GAAjB;;AAiBA,IAAIa,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AACvB,UAAQA,MAAR;AACI,SAAK,OAAL;AAAc;AACZ,eAAO,CACL,6BAAM,MAAN,EAAcC,MAAd,GAAuBC,WAAvB,CAAmC,kBAAnC,EAAuDC,IAAvD,GAA8DC,QAA9D,CAAuE;AAACC,UAAAA,GAAG,EAAG;AAAP,SAAvE,EAAkFH,WAAlF,CAA8F,aAA9F,CADK,EAEL,6BAAM,OAAN,EAAe,eAAf,EAAgCD,MAAhC,GAAyCK,OAAzC,EAFK,EAGL,6BAAM,OAAN,EAAe,qBAAf,EAAsCL,MAAtC,GAA+CM,KAA/C,GAAuDJ,IAAvD,GAA8DC,QAA9D,CAAuE;AAACC,UAAAA,GAAG,EAAE,EAAN;AAAUG,UAAAA,GAAG,EAAG;AAAhB,SAAvE,CAHK,EAIL,6BAAM,SAAN,EAAiBP,MAAjB,GAA0BC,WAA1B,CAAsC,qBAAtC,EAA6DE,QAA7D,CAAsE;AAACC,UAAAA,GAAG,EAAG;AAAP,SAAtE,EAAiFH,WAAjF,CAA6F,aAA7F,CAJK,CAAP;AAMD;;AACD,SAAK,KAAL;AAAY;AACR,eAAO,CACL,4BAAK,MAAL,EAAaD,MAAb,GAAsBC,WAAtB,CAAkC,kBAAlC,EAAsDE,QAAtD,CAA+D;AAACC,UAAAA,GAAG,EAAG;AAAP,SAA/D,EAA0EH,WAA1E,CAAsF,aAAtF,CADK,EAEL,4BAAK,QAAL,EAAeD,MAAf,GAAwBC,WAAxB,CAAoC,oBAApC,EAA0DE,QAA1D,CAAmE;AAACC,UAAAA,GAAG,EAAG;AAAP,SAAnE,EAA8EH,WAA9E,CAA0F,aAA1F,CAFK,EAGL,4BAAK,KAAL,EAAY,mBAAZ,EAAiCD,MAAjC,GAA0CM,KAA1C,EAHK,EAIL,4BAAK,OAAL,EAAcN,MAAd,GAAuBC,WAAvB,CAAmC,mBAAnC,EAAwDO,IAAxD,CAA6D,CAAC,KAAD,EAAQ,KAAR,CAA7D,EAA8EP,WAA9E,CAA0F,0BAA1F,CAJK,CAAP;AAMD;AAhBP;AAkBH,CAnBD;;AAoBAQ,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,QAAQ,EAARA,QADa;AAEbb,EAAAA,aAAa,EAAbA;AAFa,CAAjB","sourcesContent":["import { getOwnerById } from '../models/owner';\nimport { getPetByIdAndOwnerId } from '../models/pet';\nimport  { body, check } from 'express-validator';\n\nvar validateOwner = async (req, res, next) => {\n    let owner = await getOwnerById(req.params.ownerId);\n    let pet;\n    if(req.params.petId) {\n      pet = await getPetByIdAndOwnerId(req.params.petId, owner.id);\n    }\n\n    if(owner) {\n        req.owner = owner;\n        if(pet) req.pet = pet;\n        next();\n    } else {\n        res.status(200).json({ message: 'Owner not found' })\n    }\n}\n\n\nvar validate = (method) => {\n    switch (method) {\n        case 'owner': {\n          return [\n            check('name').exists().withMessage('name is required').trim().isLength({min : 3}).withMessage('Min 3 chars'),\n            check('email', 'Invalid email').exists().isEmail(),\n            check('phone', 'phone doesn`t exist').exists().isInt().trim().isLength({min: 10, max : 10}),\n            check('address').exists().withMessage('address is required').isLength({min : 5}).withMessage('Min 5 chars'),\n          ]\n        }\n        case 'pet': {\n            return [\n              body('name').exists().withMessage('name is required').isLength({min : 3}).withMessage('Min 3 chars'),\n              body('colour').exists().withMessage('colour is required').isLength({min : 3}).withMessage('Min 3 chars'),\n              body('age', 'age doesn`t exist').exists().isInt(),\n              body('breed').exists().withMessage('breed is required').isIn(['DOG', 'CAT']) .withMessage('Value must be DOG or CAT')\n            ]\n          }\n      }\n}\nmodule.exports = {\n    validate,\n    validateOwner\n}"],"file":"middlewares.js"}